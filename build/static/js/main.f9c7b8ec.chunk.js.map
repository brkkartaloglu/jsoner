{"version":3,"sources":["utils.js","Hero.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","width","indeterminateColor","color","selectAllText","fontWeight","selectedAll","backgroundColor","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","variant","Hero","classes","useState","selected","setSelected","data","setData","a","fetch","response","json","useEffect","fetchData","programs_data","programs","TextFile","writ","element","document","createElement","textFile","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","localStorage","clear","className","FormControl","InputLabel","id","Select","labelId","multiple","value","onChange","event","target","length","renderValue","join","map","program","MenuItem","key","name","ListItemIcon","Checkbox","checked","indexOf","ListItemText","primary","Button","fullWidth","onClick","preventDefault","alert","wd","item","push","setItem","JSON","stringify","getItem","title","window","location","App","ReactDOM","render","getElementById"],"mappings":"yTAEMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,KAETC,mBAAoB,CAClBC,MAAO,WAETC,cAAe,CACbC,WAAY,KAEdC,YAAa,CACXC,gBAAiB,sBACjB,UAAW,CACTA,gBAAiB,4BAOjBC,EAAY,CAChBC,WAAY,CACVC,MAAO,CACLC,UAAWC,IACXX,MAAO,MAGXY,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAEdE,QAAS,Q,SC4GIC,EAvIF,WACX,IAAMC,EAAUzB,IADC,EAEe0B,mBAAS,IAFxB,mBAEVC,EAFU,KAEAC,EAFA,OAGOF,mBAAS,MAHhB,mBAGVG,EAHU,KAGJC,EAHI,iDAIjB,4BAAAC,EAAA,sEACyBC,MAAM,aAD/B,cACQC,EADR,YAEEH,EAFF,SAEgBG,EAASC,OAFzB,8EAJiB,sBASjBC,qBAAU,YATO,mCAUfC,KACC,IAEH,IAAMC,EAAa,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAMS,SAC5B,GAAID,EAAe,CACjB,IAgCME,EAAW,SAACC,GAChB,IAAMC,EAAUC,SAASC,cAAc,KACjCC,EAAW,IAAIC,KAAK,CAACL,GAAO,CAChCM,KAAM,eAKRL,EAAQM,KAAOC,IAAIC,gBAAgBL,GACnCH,EAAQS,SAAW,uBACnBR,SAASS,KAAKC,YAAYX,GAC1BA,EAAQY,QACRC,aAAaC,SAEf,OACE,6BAASC,UAAU,QACjB,yBAAKA,UAAU,eACb,6BAASA,UAAU,aACjB,sDACyB,6BADzB,aAGA,+NAQJ,yBAAKA,UAAU,mBACb,kBAACC,EAAA,EAAD,CAAaD,UAAW/B,EAAQtB,aAC9B,kBAACuD,EAAA,EAAD,CAAYC,GAAG,wBAAf,mBACA,kBAACC,EAAA,EAAD,CACEC,QAAQ,uBACRC,UAAQ,EACRC,MAAOpC,EACPqC,SApEW,SAACC,GACpB,IAAMF,EAAQE,EAAMC,OAAOH,MACK,QAA5BA,EAAMA,EAAMI,OAAS,GAMzBvC,EAAYmC,GALVnC,EACED,EAASwC,SAAW9B,EAAc8B,OAAS,GAAK9B,IAiE5C+B,YAAa,SAACzC,GAAD,OAAcA,EAAS0C,KAAK,OACzCxD,UAAWA,GAEVwB,EAAciC,KAAI,SAACC,GAAD,OACjB,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAQZ,GAAII,MAAOQ,EAAQG,MACxC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,QAASlD,EAASmD,QAAQP,EAAQG,OAAS,KAEvD,kBAACK,EAAA,EAAD,CAAcC,QAAST,EAAQG,YAIrC,6BAEA,6BACA,kBAACO,EAAA,EAAD,CACEnC,KAAK,SACLoC,WAAS,EACT3D,QAAQ,YACRf,MAAM,UACN2E,QA9EW,SAAClB,GAGpB,GAFAA,EAAMmB,iBAEkB,IAApBzD,EAASwC,OACXkB,MAAM,wBACD,CACL,IAAIC,EAAK,GACT,IAAK,IAAIC,KAAQ5D,EACf,IAAK,IAAIE,KAAQQ,EACXV,EAAS4D,KAAUlD,EAAcR,GAAM6C,MACzCY,EAAGE,KAAKnD,EAAcR,IAI5ByB,aAAamC,QAAQ,OAAQC,KAAKC,UAAUL,IAC5C,IAAI9C,EAAI,sBAAkBc,aAAasC,QAAQ,QAAvC,KACRrD,EAASC,GACTZ,EAAY,OAwDR,YASA,6BACA,kBAACqD,EAAA,EAAD,CACEY,MAAM,6BACNX,WAAS,EACT3D,QAAQ,YACRf,MAAM,YACN2E,QAAS,kBACNW,OAAOC,SAAP,qaANL,6BAsBR,OAAO,mDCpIIC,MARf,WACE,OACE,oCACE,kBAAC,EAAD,QCDNC,IAASC,OAAO,kBAAC,EAAD,MAASxD,SAASyD,eAAe,W","file":"static/js/main.f9c7b8ec.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: 600,\r\n  },\r\n  indeterminateColor: {\r\n    color: \"#f50057\",\r\n  },\r\n  selectAllText: {\r\n    fontWeight: 500,\r\n  },\r\n  selectedAll: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.08)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.08)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n  getContentAnchorEl: null,\r\n  anchorOrigin: {\r\n    vertical: \"bottom\",\r\n    horizontal: \"center\",\r\n  },\r\n  transformOrigin: {\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n  },\r\n  variant: \"menu\",\r\n};\r\n\r\nexport { useStyles, MenuProps };\r\n","import React, { useEffect, useState } from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nimport { MenuProps, useStyles } from \"./utils\";\nimport { Button } from \"@material-ui/core\";\n\nconst Hero = () => {\n  const classes = useStyles();\n  const [selected, setSelected] = useState([]);\n  const [data, setData] = useState(null);\n  async function fetchData() {\n    const response = await fetch(\"data.json\");\n    setData(await response.json());\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const programs_data = data?.programs;\n  if (programs_data) {\n    const handleChange = (event) => {\n      const value = event.target.value;\n      if (value[value.length - 1] === \"all\") {\n        setSelected(\n          selected.length === programs_data.length ? [] : programs_data\n        );\n        return;\n      }\n      setSelected(value);\n    };\n\n    const handleSubmit = (event) => {\n      event.preventDefault();\n\n      if (selected.length === 0) {\n        alert(\"Nothing selected\");\n      } else {\n        let wd = [];\n        for (let item in selected) {\n          for (let data in programs_data) {\n            if (selected[item] === programs_data[data].name) {\n              wd.push(programs_data[data]);\n            }\n          }\n        }\n        localStorage.setItem(\"data\", JSON.stringify(wd));\n        let writ = `{\"programs\":${localStorage.getItem(\"data\")}}`;\n        TextFile(writ);\n        setSelected([]);\n      }\n    };\n\n    const TextFile = (writ) => {\n      const element = document.createElement(\"a\");\n      const textFile = new Blob([writ], {\n        type: \"text/plain\",\n      }); //pass data from localStorage API to blob\n      // const textFile = new Blob([localStorage.getItem(\"data\")], {\n      //   type: \"text/plain\",\n      // });\n      element.href = URL.createObjectURL(textFile);\n      element.download = \"program_install.json\";\n      document.body.appendChild(element);\n      element.click();\n      localStorage.clear();\n    };\n    return (\n      <section className=\"hero\">\n        <div className=\"hero-center\">\n          <article className=\"hero-info\">\n            <h2>\n              Application dependency <br /> template\n            </h2>\n            <p>\n              To install your application dependencies select from the below\n              list and generate the template, then add the file in your\n              repository. If you can't find it in the list, you can send a\n              request.\n            </p>\n          </article>\n        </div>\n        <div className=\"quiz quiz-small\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"mutiple-select-label\">Select programs</InputLabel>\n            <Select\n              labelId=\"mutiple-select-label\"\n              multiple\n              value={selected}\n              onChange={handleChange}\n              renderValue={(selected) => selected.join(\", \")}\n              MenuProps={MenuProps}\n            >\n              {programs_data.map((program) => (\n                <MenuItem key={program.id} value={program.name}>\n                  <ListItemIcon>\n                    <Checkbox checked={selected.indexOf(program.name) > -1} />\n                  </ListItemIcon>\n                  <ListItemText primary={program.name} />\n                </MenuItem>\n              ))}\n            </Select>\n            <br></br>\n\n            <br></br>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSubmit}\n            >\n              Generate\n            </Button>\n            <br></br>\n            <Button\n              title=\"dotnetadmins@isbank.com.tr\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() =>\n                (window.location = `mailto:dotnetadmins@isbank.com.tr?Subject=New Dependency Request&body=Merhaba aşağıda bilgileri verilen programı listeye ekleyebilir misiniz?%0D%0A\n                Program Adı:%0D%0A\n                Versiyonu:%0D%0A\n                Güncel İndirme Linki:%0D%0A\n                Detaylı Bilgi:%0D%0A\n                %20%0D%0A\n                İyi çalışmalar.`)\n              }\n            >\n              Request New Dependency\n            </Button>\n          </FormControl>\n        </div>\n      </section>\n    );\n  } else {\n    return <div>Hata oluştu.</div>;\n  }\n};\n\nexport default Hero;\n","import React from \"react\";\nimport Hero from \"./Hero\";\n\nfunction App() {\n  return (\n    <>\n      <Hero />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}